syntax = "proto3";

import "qualtran/api/annotations.proto";
import "qualtran/api/args.proto";
import "qualtran/api/registers.proto";

package qualtran;


message Bloq {
  string name = 1;
  repeated BloqArg args = 2;
  Registers registers = 3;
  TComplexity t_complexity = 4;
}

// A composite bloq is a hierarchical definition in terms of other simpler bloqs.
message CompositeBloq {
  BloqTable table = 1;
  CompositeBloqLite cbloq = 2;
  TComplexity t_complexity = 3;
  BloqCounts bloq_counts = 4;
}

// Messages to enable efficient description of CompositeBloq in terms of other simpler bloqs.
message BloqInstance {
  int32 id = 1;
  int32 bloq_id = 2;
}

message Soquet {
  oneof binst {
    BloqInstance bloq_instance = 1;
    string dangling_t = 2;
  }
  Register register = 3;
  repeated int32 index = 4;
}

message Connection {
  Soquet left = 1;
  Soquet right = 2;
}

message CompositeBloqLite {
  string name = 1;
  Registers registers = 2;
  repeated Connection connections = 3;
}

message BloqOrCbloq {
  oneof bloq_or_cbloq {
    Bloq bloq = 1;
    CompositeBloqLite cbloq = 2;
  }
}

message BloqTable{
  // A lookup table for all unique Bloqs.
  repeated BloqOrCbloq bloqs = 1;
}